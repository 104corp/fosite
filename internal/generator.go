// Automatically generated by MockGen. DO NOT EDIT!
// Source: generator/generator.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	. "github.com/ory-am/fosite/generator"
)

// Mock of Generator interface
type MockGenerator struct {
	ctrl     *gomock.Controller
	recorder *_MockGeneratorRecorder
}

// Recorder for MockGenerator (not exported)
type _MockGeneratorRecorder struct {
	mock *MockGenerator
}

func NewMockGenerator(ctrl *gomock.Controller) *MockGenerator {
	mock := &MockGenerator{ctrl: ctrl}
	mock.recorder = &_MockGeneratorRecorder{mock}
	return mock
}

func (_m *MockGenerator) EXPECT() *_MockGeneratorRecorder {
	return _m.recorder
}

func (_m *MockGenerator) Generate() (*Token, error) {
	ret := _m.ctrl.Call(_m, "Generate")
	ret0, _ := ret[0].(*Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockGeneratorRecorder) Generate() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Generate")
}

func (_m *MockGenerator) ValidateSignature(token *Token) error {
	ret := _m.ctrl.Call(_m, "ValidateSignature", token)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockGeneratorRecorder) ValidateSignature(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ValidateSignature", arg0)
}
