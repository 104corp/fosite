// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite/handler/core/refresh (interfaces: RefreshTokenGrantStorage)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
)

// Mock of RefreshTokenGrantStorage interface
type MockRefreshTokenGrantStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockRefreshTokenGrantStorageRecorder
}

// Recorder for MockRefreshTokenGrantStorage (not exported)
type _MockRefreshTokenGrantStorageRecorder struct {
	mock *MockRefreshTokenGrantStorage
}

func NewMockRefreshTokenGrantStorage(ctrl *gomock.Controller) *MockRefreshTokenGrantStorage {
	mock := &MockRefreshTokenGrantStorage{ctrl: ctrl}
	mock.recorder = &_MockRefreshTokenGrantStorageRecorder{mock}
	return mock
}

func (_m *MockRefreshTokenGrantStorage) EXPECT() *_MockRefreshTokenGrantStorageRecorder {
	return _m.recorder
}

func (_m *MockRefreshTokenGrantStorage) CreateAccessTokenSession(_param0 string, _param1 fosite.Requester) error {
	ret := _m.ctrl.Call(_m, "CreateAccessTokenSession", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) CreateAccessTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAccessTokenSession", arg0, arg1)
}

func (_m *MockRefreshTokenGrantStorage) CreateRefreshTokenSession(_param0 string, _param1 fosite.Requester) error {
	ret := _m.ctrl.Call(_m, "CreateRefreshTokenSession", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) CreateRefreshTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateRefreshTokenSession", arg0, arg1)
}

func (_m *MockRefreshTokenGrantStorage) DeleteAccessTokenSession(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteAccessTokenSession", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) DeleteAccessTokenSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAccessTokenSession", arg0)
}

func (_m *MockRefreshTokenGrantStorage) DeleteRefreshTokenSession(_param0 string) error {
	ret := _m.ctrl.Call(_m, "DeleteRefreshTokenSession", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) DeleteRefreshTokenSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRefreshTokenSession", arg0)
}

func (_m *MockRefreshTokenGrantStorage) GetAccessTokenSession(_param0 string, _param1 interface{}) (fosite.Requester, error) {
	ret := _m.ctrl.Call(_m, "GetAccessTokenSession", _param0, _param1)
	ret0, _ := ret[0].(fosite.Requester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) GetAccessTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetAccessTokenSession", arg0, arg1)
}

func (_m *MockRefreshTokenGrantStorage) GetRefreshTokenSession(_param0 string, _param1 interface{}) (fosite.Requester, error) {
	ret := _m.ctrl.Call(_m, "GetRefreshTokenSession", _param0, _param1)
	ret0, _ := ret[0].(fosite.Requester)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRefreshTokenGrantStorageRecorder) GetRefreshTokenSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRefreshTokenSession", arg0, arg1)
}
