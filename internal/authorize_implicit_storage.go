// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite/handler/authorize (interfaces: AuthorizeImplicitStorage)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
	authorize "github.com/ory-am/fosite/handler/authorize"
)

// Mock of AuthorizeImplicitStorage interface
type MockAuthorizeImplicitStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthorizeImplicitStorageRecorder
}

// Recorder for MockAuthorizeImplicitStorage (not exported)
type _MockAuthorizeImplicitStorageRecorder struct {
	mock *MockAuthorizeImplicitStorage
}

func NewMockAuthorizeImplicitStorage(ctrl *gomock.Controller) *MockAuthorizeImplicitStorage {
	mock := &MockAuthorizeImplicitStorage{ctrl: ctrl}
	mock.recorder = &_MockAuthorizeImplicitStorageRecorder{mock}
	return mock
}

func (_m *MockAuthorizeImplicitStorage) EXPECT() *_MockAuthorizeImplicitStorageRecorder {
	return _m.recorder
}

func (_m *MockAuthorizeImplicitStorage) CreateImplicitAccessTokenSession(_param0 string, _param1 fosite.AuthorizeRequester, _param2 *authorize.AuthorizeSession) error {
	ret := _m.ctrl.Call(_m, "CreateImplicitAccessTokenSession", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockAuthorizeImplicitStorageRecorder) CreateImplicitAccessTokenSession(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateImplicitAccessTokenSession", arg0, arg1, arg2)
}
