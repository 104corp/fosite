// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite (interfaces: AccessRequester)

package internal

import (
	gomock "github.com/golang/mock/gomock"
	client "github.com/ory-am/fosite/client"
	time "time"
)

// Mock of AccessRequester interface
type MockAccessRequester struct {
	ctrl     *gomock.Controller
	recorder *_MockAccessRequesterRecorder
}

// Recorder for MockAccessRequester (not exported)
type _MockAccessRequesterRecorder struct {
	mock *MockAccessRequester
}

func NewMockAccessRequester(ctrl *gomock.Controller) *MockAccessRequester {
	mock := &MockAccessRequester{ctrl: ctrl}
	mock.recorder = &_MockAccessRequesterRecorder{mock}
	return mock
}

func (_m *MockAccessRequester) EXPECT() *_MockAccessRequesterRecorder {
	return _m.recorder
}

func (_m *MockAccessRequester) GetClient() client.Client {
	ret := _m.ctrl.Call(_m, "GetClient")
	ret0, _ := ret[0].(client.Client)
	return ret0
}

func (_mr *_MockAccessRequesterRecorder) GetClient() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetClient")
}

func (_m *MockAccessRequester) GetGrantType() string {
	ret := _m.ctrl.Call(_m, "GetGrantType")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockAccessRequesterRecorder) GetGrantType() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetGrantType")
}

func (_m *MockAccessRequester) GetRequestedAt() time.Time {
	ret := _m.ctrl.Call(_m, "GetRequestedAt")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

func (_mr *_MockAccessRequesterRecorder) GetRequestedAt() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRequestedAt")
}
