// Automatically generated by MockGen. DO NOT EDIT!
// Source: handler.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	. "github.com/ory-am/fosite"
	context "golang.org/x/net/context"
	http "net/http"
)

// Mock of ResponseTypeHandler interface
type MockResponseTypeHandler struct {
	ctrl     *gomock.Controller
	recorder *_MockResponseTypeHandlerRecorder
}

// Recorder for MockResponseTypeHandler (not exported)
type _MockResponseTypeHandlerRecorder struct {
	mock *MockResponseTypeHandler
}

func NewMockResponseTypeHandler(ctrl *gomock.Controller) *MockResponseTypeHandler {
	mock := &MockResponseTypeHandler{ctrl: ctrl}
	mock.recorder = &_MockResponseTypeHandlerRecorder{mock}
	return mock
}

func (_m *MockResponseTypeHandler) EXPECT() *_MockResponseTypeHandlerRecorder {
	return _m.recorder
}

func (_m *MockResponseTypeHandler) HandleResponseType(ctx context.Context, responder AuthorizeResponder, requester AuthorizeRequester, req *http.Request, session interface{}) error {
	ret := _m.ctrl.Call(_m, "HandleResponseType", ctx, responder, requester, req, session)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockResponseTypeHandlerRecorder) HandleResponseType(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleResponseType", arg0, arg1, arg2, arg3, arg4)
}
