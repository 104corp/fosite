// Automatically generated by MockGen. DO NOT EDIT!
// Source: storage.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
)

// Mock of CodeResponseTypeStorage interface
type MockCodeResponseTypeStorage struct {
	ctrl     *gomock.Controller
	recorder *_MockCodeResponseTypeStorageRecorder
}

// Recorder for MockCodeResponseTypeStorage (not exported)
type _MockCodeResponseTypeStorageRecorder struct {
	mock *MockCodeResponseTypeStorage
}

func NewMockCodeResponseTypeStorage(ctrl *gomock.Controller) *MockCodeResponseTypeStorage {
	mock := &MockCodeResponseTypeStorage{ctrl: ctrl}
	mock.recorder = &_MockCodeResponseTypeStorageRecorder{mock}
	return mock
}

func (_m *MockCodeResponseTypeStorage) EXPECT() *_MockCodeResponseTypeStorageRecorder {
	return _m.recorder
}

func (_m *MockCodeResponseTypeStorage) StoreAuthorizeCodeSession(code string, authorizeRequest fosite.AuthorizeRequester, extra interface{}) error {
	ret := _m.ctrl.Call(_m, "StoreAuthorizeCodeSession", code, authorizeRequest, extra)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCodeResponseTypeStorageRecorder) StoreAuthorizeCodeSession(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StoreAuthorizeCodeSession", arg0, arg1, arg2)
}
