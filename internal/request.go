// Automatically generated by MockGen. DO NOT EDIT!
// Source: request.go

package internal

import (
	gomock "github.com/golang/mock/gomock"
	. "github.com/ory-am/fosite"
	. "github.com/ory-am/fosite/client"
	url "net/url"
	time "time"
)

// Mock of AuthorizeRequester interface
type MockAuthorizeRequester struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthorizeRequesterRecorder
}

// Recorder for MockAuthorizeRequester (not exported)
type _MockAuthorizeRequesterRecorder struct {
	mock *MockAuthorizeRequester
}

func NewMockAuthorizeRequester(ctrl *gomock.Controller) *MockAuthorizeRequester {
	mock := &MockAuthorizeRequester{ctrl: ctrl}
	mock.recorder = &_MockAuthorizeRequesterRecorder{mock}
	return mock
}

func (_m *MockAuthorizeRequester) EXPECT() *_MockAuthorizeRequesterRecorder {
	return _m.recorder
}

func (_m *MockAuthorizeRequester) GetResponseTypes() Arguments {
	ret := _m.ctrl.Call(_m, "GetResponseTypes")
	ret0, _ := ret[0].(Arguments)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetResponseTypes() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetResponseTypes")
}

func (_m *MockAuthorizeRequester) GetClient() Client {
	ret := _m.ctrl.Call(_m, "GetClient")
	ret0, _ := ret[0].(Client)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetClient() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetClient")
}

func (_m *MockAuthorizeRequester) GetScopes() Arguments {
	ret := _m.ctrl.Call(_m, "GetScopes")
	ret0, _ := ret[0].(Arguments)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetScopes() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetScopes")
}

func (_m *MockAuthorizeRequester) GetState() string {
	ret := _m.ctrl.Call(_m, "GetState")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetState() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetState")
}

func (_m *MockAuthorizeRequester) GetRequestedAt() time.Time {
	ret := _m.ctrl.Call(_m, "GetRequestedAt")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetRequestedAt() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRequestedAt")
}

func (_m *MockAuthorizeRequester) GetRedirectURI() *url.URL {
	ret := _m.ctrl.Call(_m, "GetRedirectURI")
	ret0, _ := ret[0].(*url.URL)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) GetRedirectURI() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRedirectURI")
}

func (_m *MockAuthorizeRequester) IsRedirectURIValid() bool {
	ret := _m.ctrl.Call(_m, "IsRedirectURIValid")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockAuthorizeRequesterRecorder) IsRedirectURIValid() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "IsRedirectURIValid")
}
